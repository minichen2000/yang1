/* 
 * @(#)Delete.java        1.0 15/06/18
 *
 * This file has been auto-generated by JNC, the
 * Java output format plug-in of pyang.
 * Origin: module "openconfig-notificaions", revision: "2018-06-06".
 */

package com.nokia.eml.yang.openconfigNotificaions.alarmNotification;

import com.nokia.eml.yang.openconfigNotificaions.OcNotify;
import com.tailf.jnc.Element;
import com.tailf.jnc.JNCException;
import com.tailf.jnc.YangElement;
import com.tailf.jnc.YangString;

/**
 * This class represents an element from 
 * the namespace http://openconfig.net/yang/openconfig-notificaions
 * generated to "src/com/nokia/eml/yang/openconfigNotificaions/alarmNotification/delete"
 * <p>
 * See line 78 in
 * /root/nokia-yang/openconfig-notificaions.yang
 *
 * @version 1.0 2018-06-15
 * @author Auto Generated
 */
public class Delete extends YangElement {

    private static final long serialVersionUID = 1L;

    /**
     * Constructor for an empty Delete object.
     */
    public Delete() {
        super(OcNotify.NAMESPACE, "delete");
    }

    /**
     * Clones this object, returning an exact copy.
     * @return A clone of the object.
     */
    public Delete clone() {
        return (Delete)cloneContent(new Delete());
    }

    /**
     * Clones this object, returning a shallow copy.
     * @return A clone of the object. Children are not included.
     */
    public Delete cloneShallow() {
        return (Delete)cloneShallowContent(new Delete());
    }

    /**
     * @return An array with the identifiers of any key children
     */
    public String[] keyNames() {
        return null;
    }

    /**
     * @return An array with the identifiers of any children, in order.
     */
    public String[] childrenNames() {
        return new String[] {
            "alarm-id",
        };
    }

    /* Access methods for optional leaf child: "alarm-id". */

    /**
     * Gets the value for child leaf "alarm-id".
     * @return The value of the leaf.
     */
    public YangString getAlarmIdValue() throws JNCException {
        return (YangString)getValue("alarm-id");
    }

    /**
     * Sets the value for child leaf "alarm-id",
     * using instance of generated typedef class.
     * @param alarmIdValue The value to set.
     * @param alarmIdValue used during instantiation.
     */
    public void setAlarmIdValue(YangString alarmIdValue) throws JNCException {
        setLeafValue(OcNotify.NAMESPACE,
            "alarm-id",
            alarmIdValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "alarm-id",
     * using a String value.
     * @param alarmIdValue used during instantiation.
     */
    public void setAlarmIdValue(String alarmIdValue) throws JNCException {
        setAlarmIdValue(new YangString(alarmIdValue));
    }

    /**
     * Unsets the value for child leaf "alarm-id".
     */
    public void unsetAlarmIdValue() throws JNCException {
        delete("alarm-id");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "alarm-id" leaf will not have a value.
     */
    public void addAlarmId() throws JNCException {
        setLeafValue(OcNotify.NAMESPACE,
            "alarm-id",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "alarm-id" with operation "replace".
     */
    public void markAlarmIdReplace() throws JNCException {
        markLeafReplace("alarmId");
    }

    /**
     * Marks the leaf "alarm-id" with operation "merge".
     */
    public void markAlarmIdMerge() throws JNCException {
        markLeafMerge("alarmId");
    }

    /**
     * Marks the leaf "alarm-id" with operation "create".
     */
    public void markAlarmIdCreate() throws JNCException {
        markLeafCreate("alarmId");
    }

    /**
     * Marks the leaf "alarm-id" with operation "delete".
     */
    public void markAlarmIdDelete() throws JNCException {
        markLeafDelete("alarmId");
    }

    /**
     * Support method for addChild.
     * Adds a child to this object.
     * 
     * @param child The child to add
     */
    public void addChild(Element child) {
        super.addChild(child);
    }

}
